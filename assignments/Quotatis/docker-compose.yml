version: "3.4"

services:
  php:
    build:
      context: .
      target: symfony_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-}
        STABILITY: ${STABILITY:-stable}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      MYSQL_DATABASE: ${MYSQL_DB:-db1devq_dev}
      MYSQL_USER: ${MYSQL_USER:-db1devq_quotatis}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-x!4Ofg~zJ[$r}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-x!4Ofg~zJ[$r}
      DATABASE_URL: mysql://${MYSQL_USER:-db1devq_quotatis}:${MYSQL_PASSWORD:-x!4Ofg~zJ[$r}@db-dev.quotatis.co.uk:3306/${MYSQL_DB:-db1devq_dev}?serverVersion=5.7
      # Switch to this DB URL to generate entities
      #DATABASE_URL: mysql://${MYSQL_USER:-db1devq_quotatis}:${MYSQL_PASSWORD:-x!4Ofg~zJ[$r}@db-dev.quotatis.co.uk:3306/${MYSQL_DB:-db1devq_dev_new}?serverVersion=5.7
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_PUBLISH_URL: ${MERCURE_URL:-http://caddy/.well-known/mercure}
      SYMFONY_VERSION:

  caddy:
    build:
      context: .
      target: symfony_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 443
        protocol: udp

###> doctrine/doctrine-bundle ###
#  database:
#    image: mysql:${MYSQL_VERSION:-5.7.29}
#    restart: unless-stopped
#    tty: true
#    volumes:
#      # - db-data:/var/lib/mysql
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      - ./docker/db/data:/var/lib/mysql:rw
#    ports:
#      - 3307:3306
#    environment:
#      MYSQL_DATABASE: ${MYSQL_DB:-app}
#      MYSQL_USER: ${MYSQL_USER:-symfony}
#      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-ChangeMe}
#      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-ChangeMe}
#      SERVICE_TAGS: dev
#      SERVICE_NAME: mysql
###< doctrine/doctrine-bundle ###

volumes:
  php_socket:
  caddy_data:
  caddy_config:
#  db-data:
